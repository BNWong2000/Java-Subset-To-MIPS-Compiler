boolean is_prime(int n)
{
  // handle trivial cases
  if (n < 2) {return false;}
  if (n <= 3) {return true;} // 2 and 3 are primes
  if (n % 2 == 0) {return false;} // handle multiples of 2
  if (n % 3 == 0) {return false;} // handle multiples of 3
  // try to divide n by every number 5 .. sqrt(n)
  int i;
  i = 5;
  int max;
  max = sqrt(n);
  while (i <= max) {
    if (n % i == 0) {return false;}
    if (n % (i + 2) == 0) {return false;}
    i = i + 6;
  }
  // didn't find any divisors, so it must be a prime
  return true;
}

int sqrt(int n)
{
    return n;
}


main(){
    int i;
    int j;
    int k;
    int l;
    int y;
    int sdfemvb;

    i = 2;
    j = 20;
    k = 21;
    l = 3;
    y = 5;
    sdfemvb = 223;

    if(is_prime(i)){
        printi(i);
        prints("is a prime");
    }
    if(is_prime(j)){
        printi(j);
        prints("is a prime");
    }
    if(is_prime(k)){
        printi(k);
        prints("is a prime");
    }
    if(is_prime(y)){
        printi(y);
        prints("is a prime");
    }
    if(is_prime(sdfemvb)){
        printi(sdfemvb);
        prints("is a prime");
    }

}


